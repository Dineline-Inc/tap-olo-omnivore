[project]
name = "tap-olo-omnivore"
version = "0.0.1"
description = "Singer tap for OloOmnivore, built with the Meltano Singer SDK."
readme = "README.md"
authors = [{ name = "Dish.io", email = "support@dishio.io" }]
keywords = [
    "ELT",
    "OloOmnivore",
]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
license = "Apache-2.0"
license-files = [ "LICENSE" ]
requires-python = ">=3.9"
dependencies = [
    "singer-sdk~=0.44.3",
    "requests~=2.32.3",
]

[project.optional-dependencies]
s3 = [
    "fs-s3fs~=1.1.1",
]

[project.scripts]
# CLI declaration
tap-olo-omnivore = 'tap_olo_omnivore.tap:TapOloOmnivore.cli'
tap-ncr-aloha = 'tap_olo_omnivore.tap:TapOloOmnivore.cli'
tap-par-brink = 'tap_olo_omnivore.tap:TapOloOmnivore.cli'
tap-micros-simphony = 'tap_olo_omnivore.tap:TapOloOmnivore.cli'
tap-micros-3700 = 'tap_olo_omnivore.tap:TapOloOmnivore.cli'
tap-positouch = 'tap_olo_omnivore.tap:TapOloOmnivore.cli'
tap-squirrel-systems = 'tap_olo_omnivore.tap:TapOloOmnivore.cli'
tap-xpient = 'tap_olo_omnivore.tap:TapOloOmnivore.cli'
tap-maitre-d = 'tap_olo_omnivore.tap:TapOloOmnivore.cli'
tap-ncr-cloud-connect = 'tap_olo_omnivore.tap:TapOloOmnivore.cli'
tap-simphony-fe = 'tap_olo_omnivore.tap:TapOloOmnivore.cli'
tap-simphony-cloud = 'tap_olo_omnivore.tap:TapOloOmnivore.cli'

[dependency-groups]
dev = [
    { include-group = "test" },
]
test = [
    "pytest>=8",
    "singer-sdk[testing]",
]

[tool.pytest.ini_options]
addopts = [
    "--durations=10",
]

[tool.mypy]
python_version = "3.12"
warn_unused_configs = true

[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
ignore = [
    "COM812",  # missing-trailing-comma
]
select = ["ALL"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.poetry.group.dev.dependencies]

[build-system]
requires = [
    "hatchling>=1,<2",
]
build-backend = "hatchling.build"
